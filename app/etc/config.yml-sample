# Scalr\System\Config\Extension class determines the
# structure of this config and defines default values.
# If you add/delete values in this config, mentioned class should be updated accordingly.
scalr:
  connections:
    mysql: &connections_mysql
      host: 'localhost'
      port: ~
      name: scalr
      user: scalr
      pass: 'scalr'

## Proxy settings that can be used with option scalr.aws.use_proxy = yes
## allowed types: 4 - socks4, 5 - socks5, 0 - http
#    proxy:
#      host: 'localhost'
#      port: 3128
#      user: ''
#      pass: ''
#      type: 0

#    # Mongodb may be used as storage for auditlog. This feature is still under development.
#    mongodb: &connections_mongo
#      driver: mongodb
#      host: 'localhost'
#      port: 27017
#      name: 'db'

#    ## This section is optional and it is required only when you use ldap for user's authentication (scalr.auth_mode: ldap).
#    ldap:
#      host: 'localhost'
#      #port: ~
#      base_dn: 'DC=scalr,DC=local'
#
#      ## Sometimes base_dn_groups can be useful to have different base DN to speed up querying the lits of user's groups.
#      #base_dn_groups: ~
#
#      ## User and password are preferred parameters but not a mandatory.
#      ## They are required when Scalr API is going to be accessed by APIKEY.
#      #user: 'scalradmin@scalr'
#      #pass: 'set password'
#
#      ## If group_nesting is enabled, system will take into consideration group nesting that is little bit slower.
#      #group_nesting: yes
#
#      ## The domain name that will be used when user enters an username without the domain.
#      ## If this option is not provided domain will be evaluated using base_dn data set.
#      #domain: ~
#
#      ## Filters which will be used in the LDAP queries
#      #filter:
#      #  users: "(&(objectCategory=person)(objectClass=user))"
#      #  groups: "(&(objectClass=group))"
#
#      ## When regular binding is used, a user can be authenticated by User logon name (user@domain.com).
#      ## When simple binding is used, a user can be authenticated by Full name, Display name or sAMAccountName
#      ## depends on ldap server configuration. ldap.domain won't be used in this case.
#      ## Allowed values: (regular|simple),  Default value: regular
#      #bind_type: regular
#
#      ## The name of the attribute which contains information about user's email address in the LDAP.
#      ## If this option is not provided the username will be used as email address.
#      ## Possible value: mail
#      #mail_attribute: ~
#
#      ## The name of the attribute which contains information about user's full name in the LDAP.
#      #fullname_attribute: displayName
#
#      ## User name attribute, by default is: sAMAccountName
#      #username_attribute: sAMAccountName
#
#      ## Adds additional debug information to HTTP response headers
#      #debug: no

  email:
    # Email From address
    address: ~
    # Email From name, Default: null
    name: ~

#  #Audit feature is under development
#  auditlog:
#    # Disabled by default. Default: false
#    enabled: false
#    # Valid values: mysql | mongodb
#    storage: mysql
#    connections:
#      mysql:
#        <<: *connections_mysql
#      mongodb:
#        <<: *connections_mongo
#        collection: 'auditlog'

#  cloudyn:
#    master_email: ''
#    # Allowed values: DEV | ITG | QA | PROD Default: PROD
#    environment: PROD
      
  system:
    default_disable_firewall_management: no
    instances_connection_timeout: 4
#    # server terminate timeout in graceful mode. Default: "+3 minutes"
#    server_terminate_timeout: "+3 minutes"
    scripting:
        # Allowed values: instance | scalr
        logs_storage: 'instance'
        # How often we should rotate logs on instances by default (3600 seconds) / Can be overwritten in Farm Designer
        default_instance_log_rotation_period: 3600
        # Abort Server initialization when a Blocking BeforeHostUp Scripts fails (non-zero exit code) !! Can be redefined in FarmDesigner on Advanced tab
        default_abort_init_on_script_fail: 0
    global_variables:
      format: ~
#        SCALR_INSTANCE_INDEX: '%d'
  
  ui:
    support_url: 'https://groups.google.com/d/forum/scalr-discuss'
    wiki_url: 'http://wiki.scalr.com'
    recaptcha:
      public_key: ''
      private_key: ''
    mindterm_enabled: true
    # allowed values: public, private, hostname, auto
    server_display_convention: auto
    pma:
      key: ''
      url: ''
      server_ip: ''

  # Allowed values: scalr | ldap
  auth_mode: scalr

  # Allowed values: public | local | auto.
  instances_connection_policy: public

  # By default it's allowed all avalialbe
  allowed_clouds:
  - ec2
  - gce
  - eucalyptus

  # cloudstack based
  - cloudstack
  - idcf

  # openstack based
  - openstack
  - ocs
  - ecs
  - rackspacenguk
  - rackspacengus
  - nebula

#  analytics:
#    # Whether it is enabled. Optional, default value: no
#    enabled: yes
#    connections:
#      analytics:
#        <<: *connections_mysql
#        name: analytics
#    #  # You may want to restrict access to the scalr database for analytics scripts
#    #  scalr:
#    #    <<: *connections_mysql
#    ## Polls data from the cloud
#    #poller:
#    #  # Number of threads in pool Default: 50
#    #  pool_size: 50
#    #  # Connection timeout to the cloud provider. Default: 20 seconds
#    #  cloud_connection_timeout: 20
#    #  # Log file
#    #  log_file: '/var/log/scalr.analytics-poller.log'
#    #  # Pid file
#    #  pid_file: '/var/run/scalr.analytics-poller.pid'
#    ## Processes raw data script
#    #processing:
#    #  # Number of threads in pool Default: 50
#    #  pool_size: 50
#    #  log_file: '/var/log/scalr.analytics-processing.log'
#    #  pid_file: '/var/run/scalr.analytics-processing.pid'


#  # Default value: 300 seconds
#  rss_cache_lifetime: 300

#  # Miscellaneous cache options
#  cache:
#    instance_types:
#      # Instance types cache lifetime in seconds (Default: 86400)
#      lifetime: 86400

  endpoint:
#    # Devault value: http
#    scheme: http
    host: 'endpoint url here'

#  openstack:
#    # How to pass user data to openstack: meta-data | personality | both
#    user_data_method: 'both'

#  rackspacengus:
#    instance_public_ni_name: 'public'
#    instance_private_ni_name: 'private'

  aws:
    security_group_name: 'scalr.ip-pool'
    # For example ['111.22.33.11/28', '222.22.2.12/28']
    # IP Addresses of servers where scalr installed
    ip_pool: ['8.8.8.8']
    # Default value: 'scalr.'
    security_group_prefix: 'scalr.'
#    use_proxy: no
#    # AWS Client plugins is not mandatory part of the Scalr
#    plugins:
#      # List of the enabled plug-ins. All plug-ins are disabled by default.
#      # Possible values [statistics]
#      enabled: ~
#      # Statistics plugin allows to collect information about AWS queries and errors.
#      statistics:
#        # max_heap_table_size in bytes which is taken into consideration on create table with MEMORY type. Default value: 256Mb
#        storage_max_size: 268435456

  billing:
    enabled: no
    chargify_api_key: ''
    chargify_domain: ''
    emergency_phone_number: ''    

  dns:
    mysql:
      host: 'localhost'
      port: ~
      name: 'scalr'
      user: 'scalr'
      pass: 'scalr'
    static:
      enabled: no
      nameservers: ['ns1.example-dns.net', 'ns2.example-dns.net']
      domain_name: 'example-dns.net'
    global:
      enabled: no
      nameservers: ['ns1.example.net', 'ns2.example.net', 'ns3.example.net', 'ns4.example.net']
      # base_domain is used for automated generation domain name of the user's servers
      default_domain_name: 'provide.domain.here.in'

#  # ScalrPy msg_sender script configuration
#  # This section is optional and it is required only when you need non default parameters
#  msg_sender:
##    connections:
##      # if 'mysql' not present then use scalr:connections:mysql
##      mysql:
##        host: ~
##        port: 3306
##        name: ~
##        user: ~
##        pass: ~
#    # size of the worker pool
#    pool_size: 100
#    log_file: '/var/log/scalr.msg-sender.log'
#    pid_file: '/var/run/scalr.msg-sender.pid'

#  # ScalrPy dbqueue_event script configuration
#  # This section is optional and it is required only when you need non default parameters
#  dbqueue_event:
#    connections:
#      # if 'mysql' not present then use scalr:connections:mysql
#      mysql:
##        host: ~
##        port: 3306
##        name: ~
##        user: ~
##        pass: ~
#        # mysql connection pool size
#        pool_size: 4
#    # size of the worker pool
#    pool_size: 100
#    log_file: '/var/log/scalr.dbqueue-event.log'
#    pid_file: '/var/run/scalr.dbqueue-event.pid'

  # ScalrPy load_statistics script configuration
  # This section is required
  load_statistics:
    connections:
      # required
      plotter:
#        bind_host: 0.0.0.0
#        # scheme: http or https
#        scheme: 'http'
        # host to connect to load statistics web server. Required
        # Example: example.com or 127.0.0.1
        host: ~
#        port: 8080
#        bind_port: ~
#        # web server connection pool size
#        pool_size: 100
#        # Required for https
#        ssl_certificate:
#        # Required for https
#        ssl_private_key:
#      # optional, if not present then use scalr:connections:mysql
#      mysql:
##        host: ~
##        port: 3306
##        name: ~
##        user: ~
##        pass: ~
#        # mysql connection pool size
#        pool_size: 10
    rrd:
      # directory to store rdd files. Required
      dir: ~
#      # path to rrdcached sock file
#      rrdcached_sock_path: '/var/run/rrdcached.sock'
    img:
      # directory to store images files. Required
      dir: ~
      # scheme: http or https
      scheme: 'http'
      # host. Required
      host: ~
#      port: false
#      path: ''
#    user:
#    group:
#    # list of metrics for processing
#    metrics: ['cpu', 'la', 'mem', 'net', 'io', 'snum']
#    # use snmp if scalarizr api failed
#    with_snmp: false
#    # size of worker pool for poller
#    pool_size: 100
#    # polling interval in seconds
#    interval: 120
#    log_file: '/var/log/scalr.load-statistics.log'
#    pid_file: '/var/run/scalr.load-statistics.pid'

  scalarizr_update:
    # Allowed values client | solo
    mode: 'client'
    default_repo: 'stable'
    server_url: 'http://update.scalr.net/'
    api_port: '8008'
    repos:
      latest:
        deb_repo_url: 'http://apt.scalr.net/debian scalr/'
        rpm_repo_url: 'http://rpm.scalr.net/rpm/rhel/$releasever/$basearch'
        win_repo_url: 'http://win.scalr.net'
      stable:
        deb_repo_url: 'http://apt-delayed.scalr.net/debian scalr/'
        rpm_repo_url: 'http://rpm-delayed.scalr.net/rpm/rhel/$releasever/$basearch'
        win_repo_url: 'http://win-delayed.scalr.net'
#    service:
#      chunk_size: 100
#      pool_size: 100
#      log_file: '/var/log/scalr/szr-upd-service.log'
#      pid_file: '/var/run/scalr/szr-upd-service.pid'

#  script:
#    timeout:
#      # Default value: 180 seconds
#      sync: 180
#      # Default value: 1200 seconds
#      async: 1200

#  # This is only for my.scalr.com (hosted scalr)
#  hosted:
#    enabled: no
#    analytics:
#      # Lits of the account identifiers which should be able to manage Projects
#      managed_accounts: []

#  # This section is optional. It's used for php unit testing.
#  phpunit:
#    # By default all functionl tests are skipped.
#    skip_functional_tests: true
#    # Most of the functional tests require user's environment to handle requests.
#    # value from account_users.id must be provided here
#    userid: 0
#    # client_environments.id must be provided here
#    envid: 0
#    openstack:
#      platforms:
#      #- [platform, region, imageid]
#      # Enter.It
#      - [ecs, RegionOne, b54b4117-fd27-4576-9947-a1b03b1209ce]
#      # Rackspace NewGen US
#      - [rackspacengus, DFW, 3afe97b2-26dc-49c5-a2cc-a2fc8d80c001]
#      # Rackspace NewGen UK
#      - [rackspacenguk, LON, 3afe97b2-26dc-49c5-a2cc-a2fc8d80c001]
#      # Nebula
#      - [nebula, RegionOne, 07b26892-9716-453f-9443-9b5e90d2c978]
#      # Open Cloud System
#      - [ocs, RegionOne, 7a0d5ff5-efa1-4dae-a18e-0238fe27f287]
#       cloudstack:
#           platforms:
            #- [platform, zoneid, templateid, serviceid]
            # IDCF
            #- [idcf, jp-east-t1v, 2530, 24]
